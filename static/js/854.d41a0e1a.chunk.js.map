{"version":3,"file":"static/js/854.d41a0e1a.chunk.js","mappings":"yOACA,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAwF,yBAAxF,EAA0H,0B,mBCMnH,SAASA,IACd,IAAMC,GAAeC,EAAAA,EAAAA,MACfC,GAAkBD,EAAAA,EAAAA,MAElBE,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,cAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,QACHN,EAASO,GACT,MACF,IAAK,WACHL,EAAYK,GACZ,MAEF,QACE,OAEL,EAQKC,EAAQ,WACZR,EAAS,IACTE,EAAY,GACb,EAED,OACE,kBACEO,aAAa,MACbH,KAAK,QACLI,UAAWC,EACXC,SAhBiB,SAAAR,GACnBA,EAAMS,iBACNjB,GAASkB,EAAAA,EAAAA,IAAM,CAAEf,MAAAA,EAAOE,SAAAA,KACxBO,GACD,EAQC,WAME,mBAAOO,QAAStB,EAAciB,UAAWC,EAAzC,oBACQ,mBACN,kBACEK,KAAK,QACLV,KAAK,QACLW,GAAIxB,EACJyB,UAAQ,EACRR,UAAWC,EACXJ,MAAOR,EACPoB,SAAUhB,QAGd,mBAAOY,QAASpB,EAAiBe,UAAWC,EAA5C,uBACW,mBACT,kBACEK,KAAK,WACLV,KAAK,WACLW,GAAItB,EACJuB,UAAQ,EACRR,UAAWC,EACXJ,MAAON,EACPkB,SAAUhB,QAId,mBAAQa,KAAK,SAASN,UAAWC,EAAjC,qBAKL,CC7Ec,SAASS,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAAC7B,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"label\":\"LoginForm_label__F7sLE\",\"input\":\"LoginForm_input__aQRtt\",\"button\":\"LoginForm_button__LodJg\"};","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport css from 'components/LoginForm/LoginForm.module.css';\nimport { logIn } from 'redux/auth/operations';\n\nexport function LoginForm() {\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(logIn({ email, password }));\n    reset();\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      name=\"Login\"\n      className={css.form}\n      onSubmit={handleSubmit}\n    >\n      <label htmlFor={emailInputId} className={css.label}>\n        Email <br />\n        <input\n          type=\"email\"\n          name=\"email\"\n          id={emailInputId}\n          required\n          className={css.input}\n          value={email}\n          onChange={handleInputChange}\n        />\n      </label>\n      <label htmlFor={passwordInputId} className={css.label}>\n        Password <br />\n        <input\n          type=\"password\"\n          name=\"password\"\n          id={passwordInputId}\n          required\n          className={css.input}\n          value={password}\n          onChange={handleInputChange}\n        />\n      </label>\n\n      <button type=\"submit\" className={css.button}>\n        Login\n      </button>\n    </form>\n  );\n}\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["LoginForm","emailInputId","nanoid","passwordInputId","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleInputChange","event","currentTarget","name","value","reset","autoComplete","className","css","onSubmit","preventDefault","logIn","htmlFor","type","id","required","onChange","Login","Helmet"],"sourceRoot":""}